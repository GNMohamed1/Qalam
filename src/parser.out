Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMICOLON

Grammar

Rule 0     S' -> statement
Rule 1     statement -> VAR IDENTIFIER ASSIGN expression NEWLINE
Rule 2     statement -> VAR IDENTIFIER ASSIGN expression
Rule 3     statement -> expression NEWLINE
Rule 4     statement -> NEWLINE
Rule 5     statement -> expression
Rule 6     expression -> expression PLUS term
Rule 7     expression -> expression MINUS term
Rule 8     expression -> term
Rule 9     expression -> BOOL
Rule 10    expression -> NOT expression
Rule 11    expression -> expression AND expression
Rule 12    expression -> expression OR expression
Rule 13    expression -> expression EQT expression
Rule 14    expression -> expression NEQ expression
Rule 15    expression -> expression LT expression
Rule 16    expression -> expression GT expression
Rule 17    expression -> expression ELT expression
Rule 18    expression -> expression EGT expression
Rule 19    term -> term TIMES factor
Rule 20    term -> term DIVIDE factor
Rule 21    term -> factor
Rule 22    factor -> factor POWER factor
Rule 23    factor -> INT
Rule 24    factor -> FLOAT
Rule 25    factor -> IDENTIFIER
Rule 26    factor -> NEWLINE IDENTIFIER
Rule 27    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 11
ASSIGN               : 1 2
BOOL                 : 9
DIVIDE               : 20
EGT                  : 18
ELT                  : 17
EQT                  : 13
FLOAT                : 24
GT                   : 16
IDENTIFIER           : 1 2 25 26
INT                  : 23
LPAREN               : 27
LT                   : 15
MINUS                : 7
NEQ                  : 14
NEWLINE              : 1 3 4 26
NOT                  : 10
OR                   : 12
PLUS                 : 6
POWER                : 22
RPAREN               : 27
SEMICOLON            : 
TIMES                : 19
VAR                  : 1 2
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 5 6 7 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 27
factor               : 19 20 21 22 22
statement            : 0
term                 : 6 7 8 19 20

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . VAR IDENTIFIER ASSIGN expression NEWLINE
    (2) statement -> . VAR IDENTIFIER ASSIGN expression
    (3) statement -> . expression NEWLINE
    (4) statement -> . NEWLINE
    (5) statement -> . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 2
    NEWLINE         shift and go to state 5
    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    LPAREN          shift and go to state 12

    statement                      shift and go to state 1
    expression                     shift and go to state 4
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 1

    (0) S' -> statement .



state 2

    (1) statement -> VAR . IDENTIFIER ASSIGN expression NEWLINE
    (2) statement -> VAR . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 13


state 3

    (25) factor -> IDENTIFIER .

    POWER           reduce using rule 25 (factor -> IDENTIFIER .)
    TIMES           reduce using rule 25 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (factor -> IDENTIFIER .)
    NEWLINE         reduce using rule 25 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 25 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 25 (factor -> IDENTIFIER .)
    AND             reduce using rule 25 (factor -> IDENTIFIER .)
    OR              reduce using rule 25 (factor -> IDENTIFIER .)
    EQT             reduce using rule 25 (factor -> IDENTIFIER .)
    NEQ             reduce using rule 25 (factor -> IDENTIFIER .)
    LT              reduce using rule 25 (factor -> IDENTIFIER .)
    GT              reduce using rule 25 (factor -> IDENTIFIER .)
    ELT             reduce using rule 25 (factor -> IDENTIFIER .)
    EGT             reduce using rule 25 (factor -> IDENTIFIER .)
    $end            reduce using rule 25 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 25 (factor -> IDENTIFIER .)


state 4

    (3) statement -> expression . NEWLINE
    (5) statement -> expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         shift and go to state 14
    $end            reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    AND             shift and go to state 17
    OR              shift and go to state 18
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24


state 5

    (4) statement -> NEWLINE .
    (26) factor -> NEWLINE . IDENTIFIER

    $end            reduce using rule 4 (statement -> NEWLINE .)
    IDENTIFIER      shift and go to state 25


state 6

    (8) expression -> term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 8 (expression -> term .)
    PLUS            reduce using rule 8 (expression -> term .)
    MINUS           reduce using rule 8 (expression -> term .)
    AND             reduce using rule 8 (expression -> term .)
    OR              reduce using rule 8 (expression -> term .)
    EQT             reduce using rule 8 (expression -> term .)
    NEQ             reduce using rule 8 (expression -> term .)
    LT              reduce using rule 8 (expression -> term .)
    GT              reduce using rule 8 (expression -> term .)
    ELT             reduce using rule 8 (expression -> term .)
    EGT             reduce using rule 8 (expression -> term .)
    $end            reduce using rule 8 (expression -> term .)
    RPAREN          reduce using rule 8 (expression -> term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 7

    (9) expression -> BOOL .

    NEWLINE         reduce using rule 9 (expression -> BOOL .)
    PLUS            reduce using rule 9 (expression -> BOOL .)
    MINUS           reduce using rule 9 (expression -> BOOL .)
    AND             reduce using rule 9 (expression -> BOOL .)
    OR              reduce using rule 9 (expression -> BOOL .)
    EQT             reduce using rule 9 (expression -> BOOL .)
    NEQ             reduce using rule 9 (expression -> BOOL .)
    LT              reduce using rule 9 (expression -> BOOL .)
    GT              reduce using rule 9 (expression -> BOOL .)
    ELT             reduce using rule 9 (expression -> BOOL .)
    EGT             reduce using rule 9 (expression -> BOOL .)
    $end            reduce using rule 9 (expression -> BOOL .)
    RPAREN          reduce using rule 9 (expression -> BOOL .)


state 8

    (10) expression -> NOT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 28
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 9

    (21) term -> factor .
    (22) factor -> factor . POWER factor

    TIMES           reduce using rule 21 (term -> factor .)
    DIVIDE          reduce using rule 21 (term -> factor .)
    NEWLINE         reduce using rule 21 (term -> factor .)
    PLUS            reduce using rule 21 (term -> factor .)
    MINUS           reduce using rule 21 (term -> factor .)
    AND             reduce using rule 21 (term -> factor .)
    OR              reduce using rule 21 (term -> factor .)
    EQT             reduce using rule 21 (term -> factor .)
    NEQ             reduce using rule 21 (term -> factor .)
    LT              reduce using rule 21 (term -> factor .)
    GT              reduce using rule 21 (term -> factor .)
    ELT             reduce using rule 21 (term -> factor .)
    EGT             reduce using rule 21 (term -> factor .)
    $end            reduce using rule 21 (term -> factor .)
    RPAREN          reduce using rule 21 (term -> factor .)
    POWER           shift and go to state 30


state 10

    (23) factor -> INT .

    POWER           reduce using rule 23 (factor -> INT .)
    TIMES           reduce using rule 23 (factor -> INT .)
    DIVIDE          reduce using rule 23 (factor -> INT .)
    NEWLINE         reduce using rule 23 (factor -> INT .)
    PLUS            reduce using rule 23 (factor -> INT .)
    MINUS           reduce using rule 23 (factor -> INT .)
    AND             reduce using rule 23 (factor -> INT .)
    OR              reduce using rule 23 (factor -> INT .)
    EQT             reduce using rule 23 (factor -> INT .)
    NEQ             reduce using rule 23 (factor -> INT .)
    LT              reduce using rule 23 (factor -> INT .)
    GT              reduce using rule 23 (factor -> INT .)
    ELT             reduce using rule 23 (factor -> INT .)
    EGT             reduce using rule 23 (factor -> INT .)
    $end            reduce using rule 23 (factor -> INT .)
    RPAREN          reduce using rule 23 (factor -> INT .)


state 11

    (24) factor -> FLOAT .

    POWER           reduce using rule 24 (factor -> FLOAT .)
    TIMES           reduce using rule 24 (factor -> FLOAT .)
    DIVIDE          reduce using rule 24 (factor -> FLOAT .)
    NEWLINE         reduce using rule 24 (factor -> FLOAT .)
    PLUS            reduce using rule 24 (factor -> FLOAT .)
    MINUS           reduce using rule 24 (factor -> FLOAT .)
    AND             reduce using rule 24 (factor -> FLOAT .)
    OR              reduce using rule 24 (factor -> FLOAT .)
    EQT             reduce using rule 24 (factor -> FLOAT .)
    NEQ             reduce using rule 24 (factor -> FLOAT .)
    LT              reduce using rule 24 (factor -> FLOAT .)
    GT              reduce using rule 24 (factor -> FLOAT .)
    ELT             reduce using rule 24 (factor -> FLOAT .)
    EGT             reduce using rule 24 (factor -> FLOAT .)
    $end            reduce using rule 24 (factor -> FLOAT .)
    RPAREN          reduce using rule 24 (factor -> FLOAT .)


state 12

    (27) factor -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 31
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 13

    (1) statement -> VAR IDENTIFIER . ASSIGN expression NEWLINE
    (2) statement -> VAR IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 32


state 14

    (3) statement -> expression NEWLINE .

    $end            reduce using rule 3 (statement -> expression NEWLINE .)


state 15

    (6) expression -> expression PLUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    term                           shift and go to state 33
    factor                         shift and go to state 9

state 16

    (7) expression -> expression MINUS . term
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    term                           shift and go to state 34
    factor                         shift and go to state 9

state 17

    (11) expression -> expression AND . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 35
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 18

    (12) expression -> expression OR . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 36
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 19

    (13) expression -> expression EQT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 37
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 20

    (14) expression -> expression NEQ . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 38
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 21

    (15) expression -> expression LT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 39
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 22

    (16) expression -> expression GT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 40
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 23

    (17) expression -> expression ELT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 41
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 24

    (18) expression -> expression EGT . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 42
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 25

    (26) factor -> NEWLINE IDENTIFIER .

    POWER           reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    TIMES           reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    DIVIDE          reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    NEWLINE         reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    PLUS            reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    MINUS           reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    AND             reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    OR              reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    EQT             reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    NEQ             reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    LT              reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    GT              reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    ELT             reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    EGT             reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    $end            reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)
    RPAREN          reduce using rule 26 (factor -> NEWLINE IDENTIFIER .)


state 26

    (19) term -> term TIMES . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    factor                         shift and go to state 43

state 27

    (20) term -> term DIVIDE . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    factor                         shift and go to state 44

state 28

    (10) expression -> NOT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 10 (expression -> NOT expression .)
    AND             reduce using rule 10 (expression -> NOT expression .)
    OR              reduce using rule 10 (expression -> NOT expression .)
    $end            reduce using rule 10 (expression -> NOT expression .)
    RPAREN          reduce using rule 10 (expression -> NOT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 10 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> NOT expression .) ]
  ! EQT             [ reduce using rule 10 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 10 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 10 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 10 (expression -> NOT expression .) ]
  ! ELT             [ reduce using rule 10 (expression -> NOT expression .) ]
  ! EGT             [ reduce using rule 10 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]


state 29

    (26) factor -> NEWLINE . IDENTIFIER

    IDENTIFIER      shift and go to state 25


state 30

    (22) factor -> factor POWER . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    factor                         shift and go to state 45

state 31

    (27) factor -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    AND             shift and go to state 17
    OR              shift and go to state 18
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24


state 32

    (1) statement -> VAR IDENTIFIER ASSIGN . expression NEWLINE
    (2) statement -> VAR IDENTIFIER ASSIGN . expression
    (6) expression -> . expression PLUS term
    (7) expression -> . expression MINUS term
    (8) expression -> . term
    (9) expression -> . BOOL
    (10) expression -> . NOT expression
    (11) expression -> . expression AND expression
    (12) expression -> . expression OR expression
    (13) expression -> . expression EQT expression
    (14) expression -> . expression NEQ expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression ELT expression
    (18) expression -> . expression EGT expression
    (19) term -> . term TIMES factor
    (20) term -> . term DIVIDE factor
    (21) term -> . factor
    (22) factor -> . factor POWER factor
    (23) factor -> . INT
    (24) factor -> . FLOAT
    (25) factor -> . IDENTIFIER
    (26) factor -> . NEWLINE IDENTIFIER
    (27) factor -> . LPAREN expression RPAREN

    BOOL            shift and go to state 7
    NOT             shift and go to state 8
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    IDENTIFIER      shift and go to state 3
    NEWLINE         shift and go to state 29
    LPAREN          shift and go to state 12

    expression                     shift and go to state 47
    term                           shift and go to state 6
    factor                         shift and go to state 9

state 33

    (6) expression -> expression PLUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 6 (expression -> expression PLUS term .)
    PLUS            reduce using rule 6 (expression -> expression PLUS term .)
    MINUS           reduce using rule 6 (expression -> expression PLUS term .)
    AND             reduce using rule 6 (expression -> expression PLUS term .)
    OR              reduce using rule 6 (expression -> expression PLUS term .)
    EQT             reduce using rule 6 (expression -> expression PLUS term .)
    NEQ             reduce using rule 6 (expression -> expression PLUS term .)
    LT              reduce using rule 6 (expression -> expression PLUS term .)
    GT              reduce using rule 6 (expression -> expression PLUS term .)
    ELT             reduce using rule 6 (expression -> expression PLUS term .)
    EGT             reduce using rule 6 (expression -> expression PLUS term .)
    $end            reduce using rule 6 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 34

    (7) expression -> expression MINUS term .
    (19) term -> term . TIMES factor
    (20) term -> term . DIVIDE factor

    NEWLINE         reduce using rule 7 (expression -> expression MINUS term .)
    PLUS            reduce using rule 7 (expression -> expression MINUS term .)
    MINUS           reduce using rule 7 (expression -> expression MINUS term .)
    AND             reduce using rule 7 (expression -> expression MINUS term .)
    OR              reduce using rule 7 (expression -> expression MINUS term .)
    EQT             reduce using rule 7 (expression -> expression MINUS term .)
    NEQ             reduce using rule 7 (expression -> expression MINUS term .)
    LT              reduce using rule 7 (expression -> expression MINUS term .)
    GT              reduce using rule 7 (expression -> expression MINUS term .)
    ELT             reduce using rule 7 (expression -> expression MINUS term .)
    EGT             reduce using rule 7 (expression -> expression MINUS term .)
    $end            reduce using rule 7 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS term .)
    TIMES           shift and go to state 26
    DIVIDE          shift and go to state 27


state 35

    (11) expression -> expression AND expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 11 (expression -> expression AND expression .)
    AND             reduce using rule 11 (expression -> expression AND expression .)
    OR              reduce using rule 11 (expression -> expression AND expression .)
    $end            reduce using rule 11 (expression -> expression AND expression .)
    RPAREN          reduce using rule 11 (expression -> expression AND expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! EQT             [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! ELT             [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! EGT             [ reduce using rule 11 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]


state 36

    (12) expression -> expression OR expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 12 (expression -> expression OR expression .)
    OR              reduce using rule 12 (expression -> expression OR expression .)
    $end            reduce using rule 12 (expression -> expression OR expression .)
    RPAREN          reduce using rule 12 (expression -> expression OR expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    AND             shift and go to state 17
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! EQT             [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! ELT             [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! EGT             [ reduce using rule 12 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 18 ]


state 37

    (13) expression -> expression EQT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 13 (expression -> expression EQT expression .)
    AND             reduce using rule 13 (expression -> expression EQT expression .)
    OR              reduce using rule 13 (expression -> expression EQT expression .)
    EQT             reduce using rule 13 (expression -> expression EQT expression .)
    $end            reduce using rule 13 (expression -> expression EQT expression .)
    RPAREN          reduce using rule 13 (expression -> expression EQT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! NEQ             [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! LT              [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! GT              [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! ELT             [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! EGT             [ reduce using rule 13 (expression -> expression EQT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]


state 38

    (14) expression -> expression NEQ expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 14 (expression -> expression NEQ expression .)
    AND             reduce using rule 14 (expression -> expression NEQ expression .)
    OR              reduce using rule 14 (expression -> expression NEQ expression .)
    EQT             reduce using rule 14 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 14 (expression -> expression NEQ expression .)
    $end            reduce using rule 14 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 14 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! ELT             [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! EGT             [ reduce using rule 14 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]
  ! NEQ             [ shift and go to state 20 ]


state 39

    (15) expression -> expression LT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 15 (expression -> expression LT expression .)
    AND             reduce using rule 15 (expression -> expression LT expression .)
    OR              reduce using rule 15 (expression -> expression LT expression .)
    EQT             reduce using rule 15 (expression -> expression LT expression .)
    NEQ             reduce using rule 15 (expression -> expression LT expression .)
    LT              reduce using rule 15 (expression -> expression LT expression .)
    $end            reduce using rule 15 (expression -> expression LT expression .)
    RPAREN          reduce using rule 15 (expression -> expression LT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! ELT             [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! EGT             [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]
  ! NEQ             [ shift and go to state 20 ]
  ! LT              [ shift and go to state 21 ]


state 40

    (16) expression -> expression GT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 16 (expression -> expression GT expression .)
    AND             reduce using rule 16 (expression -> expression GT expression .)
    OR              reduce using rule 16 (expression -> expression GT expression .)
    EQT             reduce using rule 16 (expression -> expression GT expression .)
    NEQ             reduce using rule 16 (expression -> expression GT expression .)
    LT              reduce using rule 16 (expression -> expression GT expression .)
    GT              reduce using rule 16 (expression -> expression GT expression .)
    $end            reduce using rule 16 (expression -> expression GT expression .)
    RPAREN          reduce using rule 16 (expression -> expression GT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    ELT             shift and go to state 23
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! ELT             [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! EGT             [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]
  ! NEQ             [ shift and go to state 20 ]
  ! LT              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]


state 41

    (17) expression -> expression ELT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 17 (expression -> expression ELT expression .)
    AND             reduce using rule 17 (expression -> expression ELT expression .)
    OR              reduce using rule 17 (expression -> expression ELT expression .)
    EQT             reduce using rule 17 (expression -> expression ELT expression .)
    NEQ             reduce using rule 17 (expression -> expression ELT expression .)
    LT              reduce using rule 17 (expression -> expression ELT expression .)
    GT              reduce using rule 17 (expression -> expression ELT expression .)
    ELT             reduce using rule 17 (expression -> expression ELT expression .)
    $end            reduce using rule 17 (expression -> expression ELT expression .)
    RPAREN          reduce using rule 17 (expression -> expression ELT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    EGT             shift and go to state 24

  ! PLUS            [ reduce using rule 17 (expression -> expression ELT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression ELT expression .) ]
  ! EGT             [ reduce using rule 17 (expression -> expression ELT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]
  ! NEQ             [ shift and go to state 20 ]
  ! LT              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! ELT             [ shift and go to state 23 ]


state 42

    (18) expression -> expression EGT expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         reduce using rule 18 (expression -> expression EGT expression .)
    AND             reduce using rule 18 (expression -> expression EGT expression .)
    OR              reduce using rule 18 (expression -> expression EGT expression .)
    EQT             reduce using rule 18 (expression -> expression EGT expression .)
    NEQ             reduce using rule 18 (expression -> expression EGT expression .)
    LT              reduce using rule 18 (expression -> expression EGT expression .)
    GT              reduce using rule 18 (expression -> expression EGT expression .)
    ELT             reduce using rule 18 (expression -> expression EGT expression .)
    EGT             reduce using rule 18 (expression -> expression EGT expression .)
    $end            reduce using rule 18 (expression -> expression EGT expression .)
    RPAREN          reduce using rule 18 (expression -> expression EGT expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

  ! PLUS            [ reduce using rule 18 (expression -> expression EGT expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression EGT expression .) ]
  ! AND             [ shift and go to state 17 ]
  ! OR              [ shift and go to state 18 ]
  ! EQT             [ shift and go to state 19 ]
  ! NEQ             [ shift and go to state 20 ]
  ! LT              [ shift and go to state 21 ]
  ! GT              [ shift and go to state 22 ]
  ! ELT             [ shift and go to state 23 ]
  ! EGT             [ shift and go to state 24 ]


state 43

    (19) term -> term TIMES factor .
    (22) factor -> factor . POWER factor

    TIMES           reduce using rule 19 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 19 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 19 (term -> term TIMES factor .)
    PLUS            reduce using rule 19 (term -> term TIMES factor .)
    MINUS           reduce using rule 19 (term -> term TIMES factor .)
    AND             reduce using rule 19 (term -> term TIMES factor .)
    OR              reduce using rule 19 (term -> term TIMES factor .)
    EQT             reduce using rule 19 (term -> term TIMES factor .)
    NEQ             reduce using rule 19 (term -> term TIMES factor .)
    LT              reduce using rule 19 (term -> term TIMES factor .)
    GT              reduce using rule 19 (term -> term TIMES factor .)
    ELT             reduce using rule 19 (term -> term TIMES factor .)
    EGT             reduce using rule 19 (term -> term TIMES factor .)
    $end            reduce using rule 19 (term -> term TIMES factor .)
    RPAREN          reduce using rule 19 (term -> term TIMES factor .)
    POWER           shift and go to state 30


state 44

    (20) term -> term DIVIDE factor .
    (22) factor -> factor . POWER factor

    TIMES           reduce using rule 20 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 20 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 20 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 20 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 20 (term -> term DIVIDE factor .)
    AND             reduce using rule 20 (term -> term DIVIDE factor .)
    OR              reduce using rule 20 (term -> term DIVIDE factor .)
    EQT             reduce using rule 20 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 20 (term -> term DIVIDE factor .)
    LT              reduce using rule 20 (term -> term DIVIDE factor .)
    GT              reduce using rule 20 (term -> term DIVIDE factor .)
    ELT             reduce using rule 20 (term -> term DIVIDE factor .)
    EGT             reduce using rule 20 (term -> term DIVIDE factor .)
    $end            reduce using rule 20 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 20 (term -> term DIVIDE factor .)
    POWER           shift and go to state 30


state 45

    (22) factor -> factor POWER factor .
    (22) factor -> factor . POWER factor

    TIMES           reduce using rule 22 (factor -> factor POWER factor .)
    DIVIDE          reduce using rule 22 (factor -> factor POWER factor .)
    NEWLINE         reduce using rule 22 (factor -> factor POWER factor .)
    PLUS            reduce using rule 22 (factor -> factor POWER factor .)
    MINUS           reduce using rule 22 (factor -> factor POWER factor .)
    AND             reduce using rule 22 (factor -> factor POWER factor .)
    OR              reduce using rule 22 (factor -> factor POWER factor .)
    EQT             reduce using rule 22 (factor -> factor POWER factor .)
    NEQ             reduce using rule 22 (factor -> factor POWER factor .)
    LT              reduce using rule 22 (factor -> factor POWER factor .)
    GT              reduce using rule 22 (factor -> factor POWER factor .)
    ELT             reduce using rule 22 (factor -> factor POWER factor .)
    EGT             reduce using rule 22 (factor -> factor POWER factor .)
    $end            reduce using rule 22 (factor -> factor POWER factor .)
    RPAREN          reduce using rule 22 (factor -> factor POWER factor .)
    POWER           shift and go to state 30

  ! POWER           [ reduce using rule 22 (factor -> factor POWER factor .) ]


state 46

    (27) factor -> LPAREN expression RPAREN .

    POWER           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    EQT             reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    ELT             reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    EGT             reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 27 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (factor -> LPAREN expression RPAREN .)


state 47

    (1) statement -> VAR IDENTIFIER ASSIGN expression . NEWLINE
    (2) statement -> VAR IDENTIFIER ASSIGN expression .
    (6) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term
    (11) expression -> expression . AND expression
    (12) expression -> expression . OR expression
    (13) expression -> expression . EQT expression
    (14) expression -> expression . NEQ expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . ELT expression
    (18) expression -> expression . EGT expression

    NEWLINE         shift and go to state 48
    $end            reduce using rule 2 (statement -> VAR IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    AND             shift and go to state 17
    OR              shift and go to state 18
    EQT             shift and go to state 19
    NEQ             shift and go to state 20
    LT              shift and go to state 21
    GT              shift and go to state 22
    ELT             shift and go to state 23
    EGT             shift and go to state 24


state 48

    (1) statement -> VAR IDENTIFIER ASSIGN expression NEWLINE .

    $end            reduce using rule 1 (statement -> VAR IDENTIFIER ASSIGN expression NEWLINE .)

